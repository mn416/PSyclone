# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2025, Science and Technology Facilities Council.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# Author J. Henrichs, Bureau of Meteorology


# This workflow will use a self-hosted runner to perform the more expensive
# integrations tests that are not run on GHA systems.

name: LFRic Extraction Tests

on:
  push

jobs:
  run_if_on_mirror:
    if: ${{ github.repository == 'stfc/PSyclone-mirror' }}
    runs-on: self-hosted
    env:
      LFRIC_APPS_REV: 7536
      LFRIC_CORE_REV: 52054
      PYTHON_VERSION: 3.13.2

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # This is required to get the commit history for merge commits for
        # the ci-skip check below.
        fetch-depth: '0'
    - name: Check for [skip ci] in commit message
      uses: mstachniuk/ci-skip@v1
      with:
        # This setting causes the tests to 'fail' if [skip ci] is specified
        fail-fast: true
        commit-filter: '[skip ci]'
    - name: Install dependencies
      run: |
        # Use a specific version of Python (rather than the system-wide one).
        module load python/${PYTHON_VERSION}
        python -m venv .runner_venv
        . .runner_venv/bin/activate
        python -m pip install --upgrade pip
        # Uncomment the below to use the submodule version of fparser rather
        # than the latest release from pypi.
        # pip install external/fparser
        pip install .[test]
        # Install BAF, and its version of Fab:
        # ------------------------------------
        git clone -b main --recurse-submodules https://github.com/MetOffice/lfric-baf.git
        # First install Fab:
        cd lfric-baf/fab
        pip install .

    # Compile GungHo with extraction
    - name: GungHo Extraction Compilation
      run:  |
        # Set up environment
        source /apps/spack/psyclone-spack/spack-repo/share/spack/setup-env.sh
        spack load lfric-build-environment%gcc@14
        source .runner_venv/bin/activate
        export LFRIC_DIR=${HOME}/LFRic/lfric_apps_${LFRIC_APPS_REV}
        export PSYCLONE_CONFIG_FILE=${PSYCLONE_LFRIC_DIR}/KGOs/lfric_psyclone.cfg

        # Set the directory names for the extraction runs:
        # -----------------------------------------------
        export RUNDIR=${HOME}/LFRic/extraction_test
        export LFRIC_CORE=${RUNDIR}/lfric_core_${LFRIC_CORE_REV}
        export LFRIC_APPS=${RUNDIR}/lfric_apps_${LFRIC_APPS_REV}

        # Copy the lfric source files (BAF copies files into the source tree)
        # -------------------------------------------------------------------
        rm -rf ${RUNDIR}
        mkdir -p ${LFRIC_CORE} ${LFRIC_APPS}
        cp -r ${HOME}/LFRic/lfric_core_${LFRIC_CORE_REV}/ ${RUNDIR}
        cp -r ${HOME}/LFRic/lfric_apps_${LFRIC_APPS_REV}/ ${RUNDIR}

        # Install the BAF scripts into the lfric directories:
        # ---------------------------------------------------
        cd lfric-baf
        ./install.sh ${LFRIC_CORE} ${LFRIC_APPS}

        # Build GungHo with the BAF extraction script
        # -------------------------------------------
        cd ${LFRIC_APPS}/applications/gungho_model
        mkdir -p $PWD/fab_workspace
        export FAB_WORKSPACE=$PWD/fab_workspace
        # Fab expects that all compilers are in PATH, and
        # does not support CC/FC etc with a full path. Since
        # the spack environment does not add all required paths,
        # we need to add the required paths manuall, and then
        # unset the environment variables (which would otherwise
        # be used as default)
        export PATH="$(dirname $CC):$(dirname $LDMPI):/apps/spack/psyclone-spack/spack-repo/opt/spack/linux-centos9-skylake_avx512/gcc-14.1.0/rose-picker-2-mmt2v3hqjwoqgkyf4f2ijlzlsy7nubnp/bin:$PATH"
        unset CC FC LD
        # Run the Fab build script
        ${LFRIC_CORE}/build.sh ./fab_gungho_model_extract.py   \
          -fc mpif90-gfortran -ld linker-mpif90-gfortran  -cc gcc

        # Run gungho (which will create the NetCDF kernel data files)
        # -----------------------------------------------------------
        # Modify number of timesteps to reduce impact on system
        cd example
        sed -i "s/timestep_end='10'/timestep_end='1'/" configuration.nml
        
        mpirun -n 6 ../fab_workspace/gungho_model_extract-mpif90-gfortran/gungho_model configuration.nml

        # Now compile one driver
        # ----------------------
        cd ..
        # FILE is the 'basic' name. A driver file is then called driver-$FILE.F90, and
        # the kernel data files are called $FILE-$RANK.nc
        FILE=sci_fem_constants_mod_psy-invoke_compute_w1_mass_matrix-compute_mass_matrix_w1_code-r0

        # We link with yaxt, since a few drivers inline a module that contains yaxt
        # functions (though yaxt is not actually used)
        mpif90 driver-${FILE}.F90 $FFLAGS $LDFLAGS -l yaxt_c -o driver-${FILE}

        # Execute the driver, which will print results to the screen
        # -----------------------------------------------------------
        ./driver-${FILE} ./example/${FILE}-0.nc
